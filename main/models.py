from django.db.models import *

import telebot as tb
bot = tb.TeleBot('5144005351:AAF17je1fLUroxiFt_PAPyuwo9cE01UQq1o')

class Suggestion(Model):
    message = TextField(verbose_name = "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ")
    date = DateField(auto_now_add = True, verbose_name = "–î–∞—Ç–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")

    class Meta:
        ordering = ['-date']
        verbose_name = "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"
        verbose_name_plural = "–ñ–∞–ª–æ–±—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"

# Create your models here.
class Subscriber(Model):
    tgid = TextField(unique = True, verbose_name = "–¢–µ–ª–µ–≥—Ä–∞–º ID")
    subdate = DateField(auto_now_add = True, verbose_name = "–î–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏")

    class Meta:
        ordering = ["-subdate","-id"]
        verbose_name = "–ü–æ–¥–ø–∏—Å—á–∏–∫"
        verbose_name_plural = "–ü–æ–¥–ø–∏—Å—á–∏–∫–∏"

class Article(Model):
    name = TextField(verbose_name = "–ó–∞–≥–æ–ª–æ–≤–æ–∫")
    info = TextField(verbose_name = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    image = TextField(verbose_name = "–ö–∞—Ä—Ç–∏–Ω–∫–∞")
    date = DateField(auto_now_add = True, verbose_name = "–î–∞—Ç–∞")

    def save(self, *args, **kwargs):
        if not Article.objects.filter(id = self.id).exists():
            for user in Subscriber.objects.all():
                bot.send_photo(int(user.tgid), self.image, '–ù–∞ —Å–∞–π—Ç–µ "–ü–∞–Ω–æ—Ä–∞–º–∞ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç" –≤—ã—à–µ–ª –Ω–æ–≤—ã–π –ø–æ—Å—Çüòé:\n"{}"\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ -> https://panorama-intellect.me/'.format(self.name))
        super().save(*args, **kwargs)

    class Meta:
        ordering = ["-date","-id"]
        verbose_name = "–ù–æ–≤–æ—Å—Ç—å"
        verbose_name_plural = "–ù–æ–≤–æ—Å—Ç–∏"

class OfferedArticle(Model):
    name = TextField(verbose_name = "–ó–∞–≥–æ–ª–æ–≤–æ–∫")
    info = TextField(verbose_name = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    image = TextField(verbose_name = "–ö–∞—Ä—Ç–∏–Ω–∫–∞")
    date = DateField(auto_now_add = True, verbose_name = "–î–∞—Ç–∞")
    is_accepted = BooleanField(default = False, verbose_name = "–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ?")

    def save(self, *args, **kwargs):
        if self.is_accepted:
            Article(name = self.name, info = self.info, image = self.image, date = self.date).save()
            self.delete()
        else:
            self.is_accepted = False
            super().save(*args, **kwargs)  # Call the "real" save() method.

    class Meta:
        ordering = ["-date","-id"]
        verbose_name = "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å"
        verbose_name_plural = "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏"
